# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#
name: "CodeQL"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

on:
  push:
    branches: [ "main" ]
  pull_request:
    paths:
      - app/**
      - .github/workflows/**
    # The branches below must be a subset of the branches above
#     branches: [ "main" ]
  schedule:
    - cron: '0 0 * * 0'

jobs:

  analyze:
    name: Code Scanning
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    timeout-minutes: ${{ (matrix.language == 'swift' && 120) || 360 }}
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'python' ]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby', 'swift' ]
        # Use only 'java' to analyze code written in Java, Kotlin or both
        # Use only 'javascript' to analyze code written in JavaScript, TypeScript or both
        # Learn more about CodeQL language support at https://aka.ms/codeql-docs/language-support

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        # If you wish to specify custom queries, you can do so here or in a config file.
        # By default, queries listed here will override any specified in a config file.
        # Prefix the list here with "+" to use these queries and those in the config file.

        # For more details on CodeQL's query packs, refer to: https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
        # queries: security-extended,security-and-quality


    # Autobuild attempts to build any compiled languages (C/C++, C#, Go, Java, or Swift).
    # If this step fails, then you should remove it and run the build manually (see below)
    - name: Autobuild
      uses: github/codeql-action/autobuild@v3

    # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
    # üìö See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsrun

    #   If the Autobuild fails above, remove it and uncomment the following three lines.
    #   modify them (or add more) to build your code if your project, please refer to the EXAMPLE below for guidance.

    # - run: |
    #     echo "Run, Build Application using script"
    #     ./location_of_script_within_repo/buildscript.sh

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"

#   scout:
#     name: Docker Scout
#     runs-on: ubuntu-latest
    
#     if: github.event_name != 'pull_request'

#     permissions:
#       contents: read
#       packages: read
#       pull-requests: write
#       security-events: write

#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3.6.0

#       -
#         name: Login to Docker Hub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}

#       -
#         name: Setup Docker Buildx
#         uses: docker/setup-buildx-action@v2.9.0

#       -
#         name: Extract Metadata
#         id: meta
#         uses: docker/metadata-action@v4
#         with:
#           images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
#           tags: |
#             codeql
#           flavor: |
#             latest=auto

#       -
#         name: Build Scout Image
#         id: build
#         uses: docker/build-push-action@v4
#         with:
#           platforms: linux/amd64
#           context: ./app
#           load: true
#           tags: ${{ steps.meta.outputs.tags }}
#           labels: ${{ steps.meta.outputs.labels }}
#           cache-from: type=gha
#           cache-to: type=gha,mode=max

# #       -
# #         name: Docker Scout Recommendations
# #         id: docker-scout-recs
# # #         if: ${{ github.event_name == 'pull_request' }}
# #         uses: docker/scout-action@v0.19.0
# #         with:
# #           command: compare,recommendations
# #           image: ${{ steps.meta.outputs.tags }}
# #           to: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
# #           write-comment: false
# #           github-token: ${{ secrets.GITHUB_TOKEN }}
# #           summary: true

#       - 
#         name: Analyze for Critical and High CVEs
#         id: docker-scout-cves
#         # Commit Version that supports Sarif File Output until Real Version Supports
#         uses: docker/scout-action@v0.19.0
#         with:
#           command: cves
#           write-comment: false
#           # Getting All Vulns by Default
#           # only-severities: critical,high
#           only-fixed: true
#           image: ${{ steps.meta.outputs.tags }}
#           sarif-file: ./sarif.output.json.sarif
#           summary: true

#       - 
#         name: Upload SARIF result
#         id: upload-sarif
#         uses: github/codeql-action/upload-sarif@v2
#         with:
#           sarif_file: ./sarif.output.json.sarif
